// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package infrahub_sdk

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// AccountsCoreAccountPaginatedCoreAccount includes the requested fields of the GraphQL type PaginatedCoreAccount.
// The GraphQL type's documentation follows.
//
// User Account for Infrahub
type AccountsCoreAccountPaginatedCoreAccount struct {
	Edges []AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount `json:"edges"`
}

// GetEdges returns AccountsCoreAccountPaginatedCoreAccount.Edges, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccount) GetEdges() []AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount {
	return v.Edges
}

// AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount includes the requested fields of the GraphQL type EdgedCoreAccount.
// The GraphQL type's documentation follows.
//
// User Account for Infrahub
type AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount struct {
	Node AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount `json:"node"`
}

// GetNode returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount.Node, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccount) GetNode() AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount {
	return v.Node
}

// AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount includes the requested fields of the GraphQL type CoreAccount.
// The GraphQL type's documentation follows.
//
// User Account for Infrahub
type AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount struct {
	// Unique identifier
	Id            string                                                                                    `json:"id"`
	Status        AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown `json:"status"`
	Display_label string                                                                                    `json:"display_label"`
}

// GetId returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount.Id, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount) GetId() string {
	return v.Id
}

// GetStatus returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount.Status, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount) GetStatus() AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown {
	return v.Status
}

// GetDisplay_label returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount.Display_label, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccount) GetDisplay_label() string {
	return v.Display_label
}

// AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown struct {
	Id          string `json:"id"`
	Description string `json:"description"`
	Color       string `json:"color"`
	Value       string `json:"value"`
}

// GetId returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetId() string {
	return v.Id
}

// GetDescription returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Description, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetDescription() string {
	return v.Description
}

// GetColor returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Color, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetColor() string {
	return v.Color
}

// GetValue returns AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown.Value, and is useful for accessing the field via an interface.
func (v *AccountsCoreAccountPaginatedCoreAccountEdgesEdgedCoreAccountNodeCoreAccountStatusDropdown) GetValue() string {
	return v.Value
}

// AccountsResponse is returned by Accounts on success.
type AccountsResponse struct {
	CoreAccount AccountsCoreAccountPaginatedCoreAccount `json:"CoreAccount"`
}

// GetCoreAccount returns AccountsResponse.CoreAccount, and is useful for accessing the field via an interface.
func (v *AccountsResponse) GetCoreAccount() AccountsCoreAccountPaginatedCoreAccount {
	return v.CoreAccount
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSession includes the requested fields of the GraphQL type PaginatedInfraBGPSession.
// The GraphQL type's documentation follows.
//
// A BGP Session represent a point to point connection between two routers
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSession struct {
	Edges []BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession `json:"edges"`
}

// GetEdges returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSession.Edges, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSession) GetEdges() []BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession {
	return v.Edges
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession includes the requested fields of the GraphQL type EdgedInfraBGPSession.
// The GraphQL type's documentation follows.
//
// A BGP Session represent a point to point connection between two routers
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession struct {
	Node BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession `json:"node"`
}

// GetNode returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession.Node, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSession) GetNode() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession {
	return v.Node
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession includes the requested fields of the GraphQL type InfraBGPSession.
// The GraphQL type's documentation follows.
//
// A BGP Session represent a point to point connection between two routers
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession struct {
	// Unique identifier
	Id            string                                                                                                                           `json:"id"`
	Display_label string                                                                                                                           `json:"display_label"`
	Description   BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute           `json:"description"`
	Remote_ip     BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress `json:"remote_ip"`
}

// GetId returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Id, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetId() string {
	return v.Id
}

// GetDisplay_label returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Display_label, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetDisplay_label() string {
	return v.Display_label
}

// GetDescription returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Description, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetDescription() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute {
	return v.Description
}

// GetRemote_ip returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession.Remote_ip, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSession) GetRemote_ip() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress {
	return v.Remote_ip
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress struct {
	Node BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddress) GetNode() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	Address BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost `json:"address"`
}

// GetAddress returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress.Address, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddress) GetAddress() BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost {
	return v.Address
}

// BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost includes the requested fields of the GraphQL type IPHost.
// The GraphQL type's documentation follows.
//
// Attribute of type IPHost
type BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost struct {
	Value string `json:"value"`
}

// GetValue returns BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Value, and is useful for accessing the field via an interface.
func (v *BgpsessionsInfraBGPSessionPaginatedInfraBGPSessionEdgesEdgedInfraBGPSessionNodeInfraBGPSessionRemote_ipNestedEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetValue() string {
	return v.Value
}

// BgpsessionsResponse is returned by Bgpsessions on success.
type BgpsessionsResponse struct {
	InfraBGPSession BgpsessionsInfraBGPSessionPaginatedInfraBGPSession `json:"InfraBGPSession"`
}

// GetInfraBGPSession returns BgpsessionsResponse.InfraBGPSession, and is useful for accessing the field via an interface.
func (v *BgpsessionsResponse) GetInfraBGPSession() BgpsessionsInfraBGPSessionPaginatedInfraBGPSession {
	return v.InfraBGPSession
}

// DeviceInfraDevicePaginatedInfraDevice includes the requested fields of the GraphQL type PaginatedInfraDevice.
type DeviceInfraDevicePaginatedInfraDevice struct {
	Edges []DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice `json:"edges"`
}

// GetEdges returns DeviceInfraDevicePaginatedInfraDevice.Edges, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDevice) GetEdges() []DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice {
	return v.Edges
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice includes the requested fields of the GraphQL type EdgedInfraDevice.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice struct {
	// Unique identifier
	Id              string                                                                                                            `json:"id"`
	Name            DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute                        `json:"name"`
	Role            DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown                             `json:"role"`
	Platform        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform         `json:"platform"`
	Primary_address DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress `json:"primary_address"`
	Status          DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown                           `json:"status"`
	Topology        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology      `json:"topology"`
	Device_type     DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType    `json:"device_type"`
	Asn             DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem      `json:"asn"`
	Description     DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute                 `json:"description"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetId() string {
	return v.Id
}

// GetName returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetName() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetRole() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown {
	return v.Role
}

// GetPlatform returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Platform, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPlatform() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetPrimary_address returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Primary_address, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPrimary_address() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress {
	return v.Primary_address
}

// GetStatus returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Status, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetStatus() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown {
	return v.Status
}

// GetTopology returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Topology, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetTopology() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology {
	return v.Topology
}

// GetDevice_type returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Device_type, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDevice_type() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType {
	return v.Device_type
}

// GetAsn returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Asn, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetAsn() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem {
	return v.Asn
}

// GetDescription returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Description, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDescription() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute {
	return v.Description
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type NestedEdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	Asn DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute `json:"asn"`
}

// GetAsn returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Asn, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetAsn() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute {
	return v.Asn
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute includes the requested fields of the GraphQL type NumberAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Number
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute struct {
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType includes the requested fields of the GraphQL type NestedEdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown struct {
	Value       string `json:"value"`
	Color       string `json:"color"`
	Description string `json:"description"`
	Id          string `json:"id"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetColor returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Color, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetColor() string {
	return v.Color
}

// GetDescription returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Description, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetDescription() string {
	return v.Description
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown struct {
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology includes the requested fields of the GraphQL type NestedEdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// DeviceResponse is returned by Device on success.
type DeviceResponse struct {
	InfraDevice DeviceInfraDevicePaginatedInfraDevice `json:"InfraDevice"`
}

// GetInfraDevice returns DeviceResponse.InfraDevice, and is useful for accessing the field via an interface.
func (v *DeviceResponse) GetInfraDevice() DeviceInfraDevicePaginatedInfraDevice { return v.InfraDevice }

// DevicesInfraDevicePaginatedInfraDevice includes the requested fields of the GraphQL type PaginatedInfraDevice.
type DevicesInfraDevicePaginatedInfraDevice struct {
	Edges []DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice `json:"edges"`
}

// GetEdges returns DevicesInfraDevicePaginatedInfraDevice.Edges, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDevice) GetEdges() []DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice {
	return v.Edges
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice includes the requested fields of the GraphQL type EdgedInfraDevice.
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice struct {
	Node DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice `json:"node"`
}

// GetNode returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice.Node, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice) GetNode() DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice {
	return v.Node
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice struct {
	// Unique identifier
	Id   string                                                                                      `json:"id"`
	Name DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute `json:"name"`
	Role DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown      `json:"role"`
}

// GetId returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetId() string {
	return v.Id
}

// GetName returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetName() DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetRole() DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown {
	return v.Role
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown struct {
	Value string `json:"value"`
}

// GetValue returns DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DevicesInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// DevicesResponse is returned by Devices on success.
type DevicesResponse struct {
	InfraDevice DevicesInfraDevicePaginatedInfraDevice `json:"InfraDevice"`
}

// GetInfraDevice returns DevicesResponse.InfraDevice, and is useful for accessing the field via an interface.
func (v *DevicesResponse) GetInfraDevice() DevicesInfraDevicePaginatedInfraDevice {
	return v.InfraDevice
}

// InterfaceInfraIPAddressPaginatedInfraIPAddress includes the requested fields of the GraphQL type PaginatedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type InterfaceInfraIPAddressPaginatedInfraIPAddress struct {
	Edges []InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress `json:"edges"`
}

// GetEdges returns InterfaceInfraIPAddressPaginatedInfraIPAddress.Edges, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddress) GetEdges() []InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress {
	return v.Edges
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress includes the requested fields of the GraphQL type EdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress struct {
	Node InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddress) GetNode() InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id            string                                                                                                           `json:"id"`
	Display_label string                                                                                                           `json:"display_label"`
	Description   InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute `json:"description"`
	Address       InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost            `json:"address"`
}

// GetId returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// GetDisplay_label returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Display_label, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetDisplay_label() string {
	return v.Display_label
}

// GetDescription returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Description, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetDescription() InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute {
	return v.Description
}

// GetAddress returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress.Address, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddress) GetAddress() InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost {
	return v.Address
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost includes the requested fields of the GraphQL type IPHost.
// The GraphQL type's documentation follows.
//
// Attribute of type IPHost
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost struct {
	Ip       string `json:"ip"`
	Hostmask string `json:"hostmask"`
	Value    string `json:"value"`
}

// GetIp returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Ip, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetIp() string {
	return v.Ip
}

// GetHostmask returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Hostmask, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetHostmask() string {
	return v.Hostmask
}

// GetValue returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost.Value, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressAddressIPHost) GetValue() string {
	return v.Value
}

// InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *InterfaceInfraIPAddressPaginatedInfraIPAddressEdgesEdgedInfraIPAddressNodeInfraIPAddressDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// InterfaceResponse is returned by Interface on success.
type InterfaceResponse struct {
	InfraIPAddress InterfaceInfraIPAddressPaginatedInfraIPAddress `json:"InfraIPAddress"`
}

// GetInfraIPAddress returns InterfaceResponse.InfraIPAddress, and is useful for accessing the field via an interface.
func (v *InterfaceResponse) GetInfraIPAddress() InterfaceInfraIPAddressPaginatedInfraIPAddress {
	return v.InfraIPAddress
}

// __DeviceInput is used internally by genqlient
type __DeviceInput struct {
	Device_name string `json:"device_name"`
}

// GetDevice_name returns __DeviceInput.Device_name, and is useful for accessing the field via an interface.
func (v *__DeviceInput) GetDevice_name() string { return v.Device_name }

// __InterfaceInput is used internally by genqlient
type __InterfaceInput struct {
	Interface_name string `json:"interface_name"`
}

// GetInterface_name returns __InterfaceInput.Interface_name, and is useful for accessing the field via an interface.
func (v *__InterfaceInput) GetInterface_name() string { return v.Interface_name }

// The query or mutation executed by Accounts.
const Accounts_Operation = `
query Accounts {
	CoreAccount {
		edges {
			node {
				id
				status {
					id
					description
					color
					value
				}
				display_label
			}
		}
	}
}
`

func Accounts(
	ctx_ context.Context,
	client_ graphql.Client,
) (*AccountsResponse, error) {
	req_ := &graphql.Request{
		OpName: "Accounts",
		Query:  Accounts_Operation,
	}
	var err_ error

	var data_ AccountsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Bgpsessions.
const Bgpsessions_Operation = `
query Bgpsessions {
	InfraBGPSession {
		edges {
			node {
				id
				display_label
				description {
					value
				}
				remote_ip {
					node {
						address {
							value
						}
					}
				}
			}
		}
	}
}
`

func Bgpsessions(
	ctx_ context.Context,
	client_ graphql.Client,
) (*BgpsessionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "Bgpsessions",
		Query:  Bgpsessions_Operation,
	}
	var err_ error

	var data_ BgpsessionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Device.
const Device_Operation = `
query Device ($device_name: String!) {
	InfraDevice(name__value: $device_name) {
		edges {
			node {
				id
				name {
					value
				}
				role {
					value
					color
					description
					id
				}
				platform {
					node {
						id
					}
				}
				primary_address {
					node {
						id
					}
				}
				status {
					id
				}
				topology {
					node {
						id
					}
				}
				device_type {
					node {
						id
					}
				}
				asn {
					node {
						asn {
							id
						}
					}
				}
				description {
					value
				}
			}
		}
	}
}
`

func Device(
	ctx_ context.Context,
	client_ graphql.Client,
	device_name string,
) (*DeviceResponse, error) {
	req_ := &graphql.Request{
		OpName: "Device",
		Query:  Device_Operation,
		Variables: &__DeviceInput{
			Device_name: device_name,
		},
	}
	var err_ error

	var data_ DeviceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Devices.
const Devices_Operation = `
query Devices {
	InfraDevice {
		edges {
			node {
				id
				name {
					value
				}
				role {
					value
				}
			}
		}
	}
}
`

func Devices(
	ctx_ context.Context,
	client_ graphql.Client,
) (*DevicesResponse, error) {
	req_ := &graphql.Request{
		OpName: "Devices",
		Query:  Devices_Operation,
	}
	var err_ error

	var data_ DevicesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Interface.
const Interface_Operation = `
query Interface ($interface_name: String!) {
	InfraIPAddress(interface__name__value: $interface_name) {
		edges {
			node {
				id
				display_label
				description {
					value
				}
				address {
					ip
					hostmask
					value
				}
			}
		}
	}
}
`

func Interface(
	ctx_ context.Context,
	client_ graphql.Client,
	interface_name string,
) (*InterfaceResponse, error) {
	req_ := &graphql.Request{
		OpName: "Interface",
		Query:  Interface_Operation,
		Variables: &__InterfaceInput{
			Interface_name: interface_name,
		},
	}
	var err_ error

	var data_ InterfaceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package infrahub_sdk

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// DeviceInfraDevicePaginatedInfraDevice includes the requested fields of the GraphQL type PaginatedInfraDevice.
type DeviceInfraDevicePaginatedInfraDevice struct {
	Edges []DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice `json:"edges"`
}

// GetEdges returns DeviceInfraDevicePaginatedInfraDevice.Edges, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDevice) GetEdges() []DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice {
	return v.Edges
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice includes the requested fields of the GraphQL type EdgedInfraDevice.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDevice) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice includes the requested fields of the GraphQL type InfraDevice.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice struct {
	// Unique identifier
	Id              string                                                                                                            `json:"id"`
	Name            DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute                        `json:"name"`
	Role            DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown                             `json:"role"`
	Platform        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform         `json:"platform"`
	Primary_address DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress `json:"primary_address"`
	Status          DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown                           `json:"status"`
	Topology        DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology      `json:"topology"`
	Device_type     DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType    `json:"device_type"`
	Asn             DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem      `json:"asn"`
	Description     DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute                 `json:"description"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetId() string {
	return v.Id
}

// GetName returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Name, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetName() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute {
	return v.Name
}

// GetRole returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Role, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetRole() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown {
	return v.Role
}

// GetPlatform returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Platform, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPlatform() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform {
	return v.Platform
}

// GetPrimary_address returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Primary_address, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetPrimary_address() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress {
	return v.Primary_address
}

// GetStatus returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Status, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetStatus() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown {
	return v.Status
}

// GetTopology returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Topology, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetTopology() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology {
	return v.Topology
}

// GetDevice_type returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Device_type, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDevice_type() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType {
	return v.Device_type
}

// GetAsn returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Asn, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetAsn() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem {
	return v.Asn
}

// GetDescription returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice.Description, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevice) GetDescription() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute {
	return v.Description
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem includes the requested fields of the GraphQL type NestedEdgedInfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystem) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem includes the requested fields of the GraphQL type InfraAutonomousSystem.
// The GraphQL type's documentation follows.
//
// An Autonomous System (AS) is a set of Internet routable IP prefixes belonging to a network
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem struct {
	Asn DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute `json:"asn"`
}

// GetAsn returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem.Asn, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystem) GetAsn() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute {
	return v.Asn
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute includes the requested fields of the GraphQL type NumberAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Number
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute struct {
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceAsnNestedEdgedInfraAutonomousSystemNodeInfraAutonomousSystemAsnNumberAttribute) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDescriptionTextAttribute) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType includes the requested fields of the GraphQL type NestedEdgedInfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceType) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType includes the requested fields of the GraphQL type InfraDeviceType.
// The GraphQL type's documentation follows.
//
// A model of device
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceDevice_typeNestedEdgedInfraDeviceTypeNodeInfraDeviceType) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute includes the requested fields of the GraphQL type TextAttribute.
// The GraphQL type's documentation follows.
//
// Attribute of type Text
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute struct {
	Value string `json:"value"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceNameTextAttribute) GetValue() string {
	return v.Value
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform includes the requested fields of the GraphQL type NestedEdgedInfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatform) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform includes the requested fields of the GraphQL type InfraPlatform.
// The GraphQL type's documentation follows.
//
// A Platform represent the type of software running on a device.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePlatformNestedEdgedInfraPlatformNodeInfraPlatform) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress includes the requested fields of the GraphQL type NestedEdgedInfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddress) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress includes the requested fields of the GraphQL type InfraIPAddress.
// The GraphQL type's documentation follows.
//
// IP Address
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDevicePrimary_addressNestedEdgedInfraIPAddressNodeInfraIPAddress) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown struct {
	Value       string `json:"value"`
	Color       string `json:"color"`
	Description string `json:"description"`
	Id          string `json:"id"`
}

// GetValue returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Value, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetValue() string {
	return v.Value
}

// GetColor returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Color, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetColor() string {
	return v.Color
}

// GetDescription returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Description, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetDescription() string {
	return v.Description
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceRoleDropdown) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown includes the requested fields of the GraphQL type Dropdown.
// The GraphQL type's documentation follows.
//
// Attribute of type Dropdown
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown struct {
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceStatusDropdown) GetId() string {
	return v.Id
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology includes the requested fields of the GraphQL type NestedEdgedTopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology struct {
	Node DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology `json:"node"`
}

// GetNode returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology.Node, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopology) GetNode() DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology {
	return v.Node
}

// DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology includes the requested fields of the GraphQL type TopologyTopology.
// The GraphQL type's documentation follows.
//
// A Topology represents the entire network pod.
type DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology struct {
	// Unique identifier
	Id string `json:"id"`
}

// GetId returns DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology.Id, and is useful for accessing the field via an interface.
func (v *DeviceInfraDevicePaginatedInfraDeviceEdgesEdgedInfraDeviceNodeInfraDeviceTopologyNestedEdgedTopologyTopologyNodeTopologyTopology) GetId() string {
	return v.Id
}

// DeviceResponse is returned by Device on success.
type DeviceResponse struct {
	InfraDevice DeviceInfraDevicePaginatedInfraDevice `json:"InfraDevice"`
}

// GetInfraDevice returns DeviceResponse.InfraDevice, and is useful for accessing the field via an interface.
func (v *DeviceResponse) GetInfraDevice() DeviceInfraDevicePaginatedInfraDevice { return v.InfraDevice }

// __DeviceInput is used internally by genqlient
type __DeviceInput struct {
	Device_name string `json:"device_name"`
}

// GetDevice_name returns __DeviceInput.Device_name, and is useful for accessing the field via an interface.
func (v *__DeviceInput) GetDevice_name() string { return v.Device_name }

// The query or mutation executed by Device.
const Device_Operation = `
query Device ($device_name: String!) {
	InfraDevice(name__value: $device_name) {
		edges {
			node {
				id
				name {
					value
				}
				role {
					value
					color
					description
					id
				}
				platform {
					node {
						id
					}
				}
				primary_address {
					node {
						id
					}
				}
				status {
					id
				}
				topology {
					node {
						id
					}
				}
				device_type {
					node {
						id
					}
				}
				asn {
					node {
						asn {
							id
						}
					}
				}
				description {
					value
				}
			}
		}
	}
}
`

func Device(
	ctx_ context.Context,
	client_ graphql.Client,
	device_name string,
) (*DeviceResponse, error) {
	req_ := &graphql.Request{
		OpName: "Device",
		Query:  Device_Operation,
		Variables: &__DeviceInput{
			Device_name: device_name,
		},
	}
	var err_ error

	var data_ DeviceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
